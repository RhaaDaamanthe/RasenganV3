{% extends 'base.html.twig' %}

{% block title %}Modifier ma carte de profil{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/styles.css') }}">
    <style>
        .card-selector-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            justify-content: center;
            padding: 20px;
        }

        .card-selector-item {
            cursor: pointer;
            border: 4px solid transparent;
            border-radius: 12px;
            overflow: hidden;
            transition: transform 0.2s, border-color 0.2s;
        }

        .card-selector-item.selected {
            border-color: #007bff;
            transform: scale(1.05);
        }
        
        .card-selector-item img {
            width: 150px;
            height: 200px;
            object-fit: cover;
            display: block;
        }

        .save-button {
            display: flex;
            justify-content: center;
            margin-top: 30px;
        }
    </style>
{% endblock %}

{% block body %}
    <main class="admin-container">
        <h1>Changer ma carte de profil</h1>
        
        <p>Sélectionnez une carte de votre collection pour l'utiliser comme image de profil.</p>

        <div class="card-selector-container">
            {% for card in userCards %}
                <div class="card-selector-item" data-image-path="{{ card.imagePath }}">
                    <img src="{{ asset(card.imagePath) }}" alt="{{ card.nom }}" />
                </div>
            {% else %}
                <p>Vous n'avez pas encore de cartes dans votre collection.</p>
            {% endfor %}
        </div>
        
        <div class="save-button">
            <button id="saveButton" class="btn btn-primary" style="display: none;">Enregistrer la carte de profil</button>
        </div>
    </main>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
<script>
        document.addEventListener('DOMContentLoaded', () => {
            const cards = document.querySelectorAll('.card-selector-item');
            const saveButton = document.getElementById('saveButton');
            let selectedImagePath = null;

            cards.forEach(card => {
                card.addEventListener('click', () => {
                    // Désélectionne toutes les cartes
                    cards.forEach(c => c.classList.remove('selected'));
                    
                    // Sélectionne la carte cliquée
                    card.classList.add('selected');
                    
                    // Stocke le chemin de l'image et affiche le bouton
                    selectedImagePath = card.dataset.imagePath;
                    saveButton.style.display = 'block';
                });
            });

            saveButton.addEventListener('click', async () => {
                if (!selectedImagePath) {
                    return;
                }

                try {
                    const response = await fetch('{{ path('api_update_profile_picture') }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ imagePath: selectedImagePath })
                    });

                    if (response.ok) {
                        const data = await response.json();
                        alert('Profil mis à jour avec succès !');
                        
                        // Redirection vers players_list
                        if (data.redirect) {
                            window.location.href = data.redirect;
                        } else {
                            // URL de fallback - remplacez par votre vraie URL
                            window.location.href = '/players_list';
                        }
                    } else {
                        const errorData = await response.json();
                        alert('Erreur : ' + (errorData.error || 'Une erreur est survenue.'));
                    }
                } catch (error) {
                    console.error('Erreur lors de la requête :', error);
                    alert('Une erreur de connexion est survenue.');
                }
            });
        });
    </script>
{% endblock %}